
======================= TODO ==============================


- If still getting memory exceeeded error, try replacing dictionary references with direct string substitutions
-- If still getting error, try Method 4 (see below)





Catch over-quota exception; display (static) message to user
# 17 Mar 2012, in progress





- Consider handling specific over-quota conditions
    e.g., handling SendMail OverQuotaError
          http://code.google.com/appengine/docs/quotas.html#When_a_Resource_is_Depleted

          
          

Investigate adding Google Analytics (or similar) to track usage of tasks-backup)
    As at 17 Mar, it seems that 69 other people have used tasks-backup (72 - my 3 accounts)
    

    Consider donations to pay for extra CPU
    Ast at 17 Mar, about halfway through day, 7.82 of 28.00 Instance Hours
    

    
    
- Consider handling DeadlineExceededError in /oauth2callback
    See "C:\Tmp\logs\tasks-backup_2012-03-17_14-11_all.log"
    Happened twice
    Caused error 500, in 
        flow.step2_exchange(self.request.params)
    
    
    
    
    

Track memory usage;
    pympler
        http://code.google.com/p/pympler/
===>        " ... whenever his script iterates over the input set, a new dict object is created ... "
  
 
  

- BUG: "Exceeded soft private memory limit"
==> Add     import gc
            gc.collect()

    From http://stackoverflow.com/questions/9210731/what-is-the-proper-way-to-write-to-the-google-app-engine-blobstore-as-a-file-in 
        Unfortunately python's garbage collector is not perfect. Every write you do creates lots of small objects (via protocol buffer creation) that is not collected by python on the fly for some reason. I found that in mapreduce library I have to do
            import gc
            gc.collect()
        ---------
        Since it is Python 2.5, xrange should be better than range, isn't it
    
    Try apptrace
        http://pypi.python.org/pypi/apptrace
            May need to run on Linux ????
        http://code.google.com/p/apptrace/wiki/UsingApptrace
        From http://code.google.com/p/apptrace/
            Since apptrace is meant for development and debugging purposes only, it works with the development appserver of the Google App Engine Python SDK and TyphoonAE. It will definitely not work on the GAE production environment.
    
    From http://stackoverflow.com/questions/9124398/in-google-app-engine-how-to-i-reduce-memory-consumption-as-i-write-a-file-out-t
        You'd be better off not doing the batching yourself, but just iterating over the query. The iterator will pick a batch size (probably 20) that should be adequate:

        q = model.all()
        for entity in q:
            row = get_dict_for_entity(entity)
            writer.writerow(row)
        This avoids re-running the query with ever-increasing offset, which is slow and causes quadratic behavior in the datastore.

        An oft-overlooked fact about memory usage is that the in-memory representation of an entity can use 30-50 times the RAM compared to the serialized form of the entity; e.g. an entity that is 3KB on disk might use 100KB in RAM. (The exact blow-up factor depends on many factors; it's worse if you have lots of properties with long names and small values, even worse for repeated properties with long names.)
        ------------------------
        It appears to have something to do with using the "with" statement and files in python 2.5. If I simply try to write out a 4000 line text file from a StringIO object to a blobstore file, I can reproduce the same soft memory error

    From http://stackoverflow.com/questions/9210731/what-is-the-proper-way-to-write-to-the-google-app-engine-blobstore-as-a-file-in
        Fix also finalize bugs - not finalize invalid file or return result if exception!
            "findstr /s /n /c:".open" *.py" shows 3 .open() in dateutil\zoneinfo\__init__.py
                Investigate if .finalise() is required before .close()
                There are some cases where file might not be closed on exception
        
    From http://stackoverflow.com/questions/9251040/memory-limit-hit-with-appengine-mapreduce
        Also consider calling gc.collect() at regular points during your code. I've seen several SO questions about exceeding soft memory limits that were alleviated by calling gc.collect(), most having to do with blobstore.
        ------
            Also: Investigate worker.py:572:    apiproxy_stub_map.apiproxy.GetPreCallHooks().Append(
    
    From https://groups.google.com/forum/?fromgroups#!topic/google-appengine/Sm1U3OjbDCI 
        cache datastore info (so.. the code checks its local cache.. then memcache and then datastore).. but I've been stuck sort of monitoring my tasks (I run looping tasks that access the same data) to see if I can tell when they hit the memory limit and do a cold start.. and then reduce the size of the in memory cache dict.
            tasks-backup.py:35:from google.appengine.api import memcache
            tasks-backup.py:72:  memcache.set(user.user_id(), pickle.dumps(flow))
            tasks-backup.py:789:        flow = pickle.loads(memcache.get(user.user_id()))

    From http://stackoverflow.com/questions/9124398/in-google-app-engine-how-to-i-reduce-memory-consumption-as-i-write-a-file-out-t
        an entity can use 30-50 times the RAM compared to the serialized form of the entity; e.g. an entity that is 3KB on disk might use 100KB in RAM. 
        (The exact blow-up factor depends on many factors; 
            it's worse if you have 
===>            lots of properties with long names and small values, 
===>            even worse for repeated properties with long names.
        )
    
        --------
        It appears to have something to do with using the "with" statement and files in python 2.5
===>        Check if Django or "google.appengine.ext.webapp import template" uses with
        
        
***>    Test template without dates (either don't choose dates, or comment out dates


    Check if dateutil\zoneinfo\__init__.py is possibly throwing error between lines 69-75 or 82-84
        date is potentially used several times for each task
        (Could be not closing)

        
        

- BUG: The last tasklist is displayed twice in html_raw. The second instance displays "No tasks"
    e.g., for JS1999.Outlook
        The last tasklist is "TL17", although there are only two tasklists by that name
       The 3rd instance is displayed as the last tasklist, and displays "No tasks"
# Started, 17 Mar 2012
       
       
       
       
- Consider disabling [Retrieve tasks data] when user clicks [Display tasks page], because it can take a 
  long time to build the HTML page, and I'm not sure what would happen if another request was triggered ...
       
       
       
       
- Investigate most efficient way to build strings, etc.
    From http://www.skymind.com/~ocrow/python_string/
        Using backticks (``) around num on the fourth line converts the integer value to a string. You can accomplish the same thing with the str() function, but that ended up being somewhat slower, so I stuck with the backticks for all my methods.     
       
        At the end of the computation for Method 6 the interpreter is using 22,844kB of memory, eight times the size of the string it is computing, whereas Methods 3 and 5 uses less than half that much.
        
    From http://code.google.com/appengine/docs/python/tools/webapp/requesthandlers.html
        The method processes the request and prepares a response, then returns. 
===>    Finally, the application sends the response to the client.
      This means that it could be concatenation strings evert time that I call .write()
      May therefore be more efficient to use method 4 (above)
      
    From http://code.google.com/appengine/docs/python/tools/webapp/responseclass.html#Response_wsgi_write
        webapp sends the response when the handler method returns. The content of the response is the final state of the Response object when the method returns.
        Note: Manipulating the object in the handler method does not communicate any data to the user. In particular, this means that webapp cannot send data to the browser then perform additional logic, as in a streaming application. 
===>    (App Engine applications cannot stream data to the browser, with or without webapp.)

        out
            An instance of the StringIO class that contains the body text of the response. The contents of this object are sent as the body of the response when the request handler method returns
      
- Investigate using client-side JavaScript to retrieve data and build the web page
- Investigate other Web 2.0 technologies (e.g., JSON, Ruby, XMPP, etc) for client side processing
-- Advantages;
    - Can start to return data to user sooner
    - Hopefully uses less server-side memory
    
    
    
 
- Consider adding code to prevent worker being run more than once for a given user
  According to http://code.google.com/appengine/docs/python/taskqueue/overview-push.html
    App Engine's Task Queue API is designed to only invoke a given task once; however, it is possible in exceptional circumstances that a task may execute multiple times

>>> You can examine and manipulate tasks from the developer console at:
    http://localhost:8080/_ah/admin/taskqueue

 
 
 
        
- BUG: Error downloading Outlook CSV on Android
# From http://digiblog.de/2011/04/19/android-and-the-download-file-headers/
    Can't return file from POST request on stock Android or Dolphin browsers
-- Downloading Outlook CSV;
--- Dolphin browser: downloads HTML code for /result as the correctly-named .csv file
--- Android browser: downloads HTML code for /result as tasks_outlook_Julie.htm (or tasks_ics_Julie.htm for ICS download)
# Tried (didn't work);
    self.response.clear() before building headers
    
# From http://stackoverflow.com/questions/4674737/avoiding-content-type-issues-when-downloading-a-file-via-browser-on-android
    "inability of the stock browser and the Android download manager to correctly handle downloads initiated through POST requests."
# See also http://code.google.com/p/android/issues/detail?id=1780
===> Need to serve different page if client is a mobile browser;
  - Use GET instead of POST for returning results
  - Improve UX for smaller screen
  
# To recognise user agent;
    Chrome, Windows 7:
        User-Agent = Mozilla/5.0 (Windows NT 6.1) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.78 Safari/535.11
    Firefox, Android
        User-Agent = Mozilla/5.0 (Android; Linux armv7l; rv:10.0.2) Gecko/20120215 Firefox/10.0.2 Fennec/10.0.2
    Opera, Android
        User-Agent = Opera/9.80 (Android; Opera Mini/6.5.27452/27.1324; U; en) Presto/2.8.119 Version/11.10
    Dolphin HD, Android (NOTE: Same as stock browser - When using default settings)
        User-Agent = Mozilla/5.0 (Linux; U; Android 2.3.3; en-au; GT-I9000 Build/GINGERBREAD) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1
    Stock Android browser (NOTE: Same as Dolphin HD - When Dolphin uses default settings))
        User-Agent = Mozilla/5.0 (Linux; U; Android 2.3.3; en-au; GT-I9000 Build/GINGERBREAD) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1
    
    
- Improve UX on Android browser
-- HTML display page looks good on Dolphin. 
     Indenting works
     Text wraps to screen width
-- Other pages (index, progress, result) do not fit on Android screen
--- Buttons and tables are too wide
--- Too much text before options/actions are displayed
- Test different resolutions using emulator





- Consider checking if user has data from a previous job, and displaying option to return values 
  from previous backup instead of retrieving fresh data (to save time, and also to provide user 
  with a measure of history)
  
  


- Investigate; user clicks [Back] from HTML view, URL is /progress 
-- much more logical if it displays /results



- Consider displaying <No Title> if title is empty (or all spaces)
-- e.g. if len(trimspaces(title)) == 0
-- Currently looks confusing to have [ ] with nothing else
---(especially if task has no notes, and user selected no due/updated display)
* Could leave it as it is, since that is how it would look on the Google Tasks website
    . GTB defaults to "<No Task Title>" if there is no 'title' element in the task dictionary



- Consider adding 'links' to various formats
-- Add to html_raw
-- Already included in Python data dump
-- As part of a note for Outlook (User controlled option?)
-- Check if supported by iCal, else in notes?
-- Investigate options for hTodo and RTM
-- As additional field(s) in raw dumps
--- Need to consider how to handle multiple links for one task
--- See https://developers.google.com/google-apps/tasks/v1/reference/tasks#resource




- Consider using an Alert rather than new page to notify that email was sent
-- All other actions stay on Reselts page. email requires user to use browser back button




- Investigate duplicated tasks
# It is almost certain that external task apps are involved, because I just found 56 tasks which were all updated within 7 seconds (starting at 22-08-2011  6:17:50 PM), and it is improbable to change that many tasks simultaneously any other way.
-- This task was definitely entered using CalenGoo
--- Note that updated is different for both
    Default List	tasks#task	MDQ2MzI0NTgyNTU0Nzk2NDUyMTQ6MDoxNDAwMDg2NDM1	0uhCwbPSh3mnl5uXt3orJuKhwIo/MTQ5NjA0MjQwOA""	Blood test, morning, IMPORTANT 	2012-03-05 12:15	https://www.googleapis.com/tasks/v1/lists/MDQ2MzI0NTgyNTU0Nzk2NDUyMTQ6MDow/tasks/MDQ2MzI0NTgyNTU0Nzk2NDUyMTQ6MDoxNDAwMDg2NDM1		3753		needsAction	2012-03-30			
    Default List	tasks#task	MDQ2MzI0NTgyNTU0Nzk2NDUyMTQ6MDoxNDYwOTUxODY	0uhCwbPSh3mnl5uXt3orJuKhwIo/NTU4OTM1MjQ5""	Blood test, morning, IMPORTANT 	2012-03-01 03:14	https://www.googleapis.com/tasks/v1/lists/MDQ2MzI0NTgyNTU0Nzk2NDUyMTQ6MDow/tasks/MDQ2MzI0NTgyNTU0Nzk2NDUyMTQ6MDoxNDYwOTUxODY		14349		needsAction	2012-03-30			

-- Don't know if this was entered/edited via web and/or any other apps
--- Note that all 3 have the same updated time, and the 1st and last have the same completed time. Position is significantly different between 1st and 3rd
    ZZ Archive	tasks#task	MDQ2MzI0NTgyNTU0Nzk2NDUyMTQ6MzoyOQ	0uhCwbPSh3mnl5uXt3orJuKhwIo/LTM4NDU4MzgyNA""	Backup CalenGoo tasks	2011-08-22 18:17	https://www.googleapis.com/tasks/v1/lists/MDQ2MzI0NTgyNTU0Nzk2NDUyMTQ6Mzow/tasks/MDQ2MzI0NTgyNTU0Nzk2NDUyMTQ6MzoyOQ	MDQ2MzI0NTgyNTU0Nzk2NDUyMTQ6MzoyNg	536870911	"Backup and then clear from visible list

    Options before clearing
    . Export to file
    .. From Android
    .. From PC
    . Rely on backup apps
    . Move to another task list"	completed		2011-05-29 14:42		
    ZZ Archive	tasks#task	MDQ2MzI0NTgyNTU0Nzk2NDUyMTQ6MzoyOA	0uhCwbPSh3mnl5uXt3orJuKhwIo/ODY5ODQwNjcy""	Backup CalenGoo tasks	2011-08-22 18:17	https://www.googleapis.com/tasks/v1/lists/MDQ2MzI0NTgyNTU0Nzk2NDUyMTQ6Mzow/tasks/MDQ2MzI0NTgyNTU0Nzk2NDUyMTQ6MzoyOA	MDQ2MzI0NTgyNTU0Nzk2NDUyMTQ6MzoyNg	1073741823		completed		2011-05-31 03:02		
    ZZ Archive	tasks#task	MDQ2MzI0NTgyNTU0Nzk2NDUyMTQ6MzoyNw	0uhCwbPSh3mnl5uXt3orJuKhwIo/MTgyODM4MjA5MA""	Backup CalenGoo tasks	2011-08-22 18:17	https://www.googleapis.com/tasks/v1/lists/MDQ2MzI0NTgyNTU0Nzk2NDUyMTQ6Mzow/tasks/MDQ2MzI0NTgyNTU0Nzk2NDUyMTQ6MzoyNw	MDQ2MzI0NTgyNTU0Nzk2NDUyMTQ6MzoyNg	2147483647	"Backup and then clear from visible list

    Options before clearing
    . Export to file
    .. From Android
    .. From PC
    . Rely on backup apps
    . Move to another task list"	completed		2011-05-29 14:42		



- Consider using cookies to remember user's task selection settings
-- What to include (from index.html)
-- What to display (from progress.html)





- Consider using Channel API to return progress to user
    From http://code.google.com/appengine/docs/python/channel/
    The Channel API (Python)
    The Channel API creates a persistent connection between your application and Google servers, allowing your application to send messages to JavaScript clients in real time without the use of polling. This is useful for applications that are designed to update the user about new information immediately or where user input is immediately broadcast to other users. Some examples include collaborative applications, multi-player games, and chat rooms. In general, using Channel API is a better choice than polling in situations where updates can't be predicted or scripted, such as when relaying information between human users or from events not generated systematically.


    
    
- Consider giving user option to include/exclude particular properties.
--- Can only exclude properties which are not mandatory for export formats (e.g., can't exclude title, completed, etc.) 
    We can then use 'fields' selector to specify a subset of fields to include in the response to reduce amount of data retrieved and stored
        From http://code.google.com/apis/tasks/v1/using.html#query-params
         
- Consider using check-boxes to allow user to select which fields they need, to limit request and data processing size)
    From http://code.google.com/apis/tasks/v1/reference.html#resource_tasks
        kind	string	Type of the resource. This is always tasks#task.	
        id	string	Task identifier.	
        etag	string	ETag of the resource.	
        title	string	Title of the task.	 yes
        updated	string	Last modification time of the task (as an RFC 3339 timestamp).	
        selfLink	string	URL pointing to this task. Used to retrieve, update, or delete this task.	
        parent	string	Parent task identifier. This field is omitted if it is a top-level task. This field is read-only. Use the move method to move the task under a different parent or to the top level.	
        position	string	String indicating the position of the task among its sibling tasks under the same parent task or at the top level. If this string is greater than another task's corresponding position string according to lexicographical ordering, the task is positioned after the other task under the same parent task or at the top level. This field is read-only. Use the move method to move the task to another position.	
        notes	string	Notes describing the task. Optional.	 yes
        status	string	Status of the task. This is either needsAction or completed.	 yes
        due	string	Due date of the task (as an RFC 3339 timestamp). Optional.	 yes
        completed	string	Completion date of the task (as an RFC 3339 timestamp). This field is omitted if the task has not been completed.	 yes
        deleted	boolean	Flag indicating whether the task has been deleted. The default is False.	
        hidden	boolean	Flag indicating whether the task is hidden. This is the case if the task had been marked completed when the task list was last cleared. The default is False. This field is read-only.
      
      
      
      
      
- Consider supporting apple-touch-icon.png



      
- Consider setting the initial refresh in progress.html to a small value, and then increasing.
-- Also consider delaying displaying first progress page, in case the job has already finished (e.g. if number of tasks is small)





- Display custom error msg for server errors
  for over_quota & timeout
      http://code.google.com/appengine/docs/python/config/appconfig.html#Custom_Error_Responses

- Catch exception returning results to user and display error page
-- e.g., malformed Django template was causing error
# It seems that only 3 types of server error can be caught and redirected to a specified web page.

Catch over quota;
# From http://code.google.com/appengine/docs/quotas.html#When_a_Resource_is_Depleted
-  In the Python API, this exception is apiproxy_errors.OverQuotaError
    try:
      mail.SendMessage(to='test@example.com',
                       from='admin@example.com',
                       subject='Test Email',
                       body='Testing')
    except apiproxy_errors.OverQuotaError, message:
      # Log the error.
      logging.error(message)
      # Display an informative message to the user.
      self.response.out.write('The email could not be sent. '
                              'Please try again later.')



    
    
    
    
Post to http://code.google.com/p/google-tasks-porter/issues/detail?id=15 when I have made more progress
- i.e., fixed Deadline error
-- Perhaps also to other issues pages, e.g., 
    http://code.google.com/p/google-tasks-porter/issues/detail?id=13
    http://code.google.com/p/google-tasks-porter/issues/detail?id=11


    
    
    
Import tasks
- See 2 Mar 2012 email to Bard




    
Tidy up index.html, so buttons are higher up once user has authenticated (remove text about "what GTB can do")





Investigate (from line 198 in worker.py)
	apiproxy_stub_map.apiproxy.GetPreCallHooks().Append(
		  'urlfetch_timeout_hook', urlfetch_timeout_hook, 'urlfetch')
	  

      
      
Display more traceback detail
- After exc_type, exc_value, exc_traceback = sys.exc_info(),
  dir(exc_traceback) gives ['tb_frame', 'tb_lasti', 'tb_lineno', 'tb_next']		
-- Need to find way of displaying useful info from this for debugging (i.e., norml stacktrace)



		
Give user option to choose date format; US, Aus, Euro, other?
- mm/dm/yyyy, dd/mm/yyyy, dd-mm-yyyy, dd.mm.yyyy, dd-mmm-yyyy, yyyy-mm-dd, yyyy.mm.dd
-- Would require pre-formatting date before passing to Djang template, so remove |date:"Y-m-d" from date fields, unless Django can accept a field format specifier passed in as a template value
- Australian Outlook accepts 27-01-2012, 2012-02-05, 04/02/2012 but ignores 30-Jan-2012
- Excel accepts 27-01-2012, 2012-02-05, 04/02/2012, 30-Jan-2012, but converts to dd-mm-yyyy (which is, I think, whichever format the user has chosen in Windows for short-date)
. Do not allow user to specify their own format, and do not pass in actual format as a GET or POST arg, to prevent user entering a malicious string



- Check screen print of HTML page with indenting (when using html_raw)



Restore hTodo format
- Requires proper handling of nested tasks (as per original DB model)
    hTodo uses
      recurse task root:tasklist.tasks parent:"parent_" children:"children" sort:"position"
    so presumably requires additional attributes
    * ?? Store the ID of child tasks in a List as a 'children' attribute for task





Display summaries for task lists on .html page
- Number of tasks, num completed (per list, and total)




Check if the logging level can be set on the logging module;
- If possible, set a flag in app to only run debug level logging when test user is logged in
-- Current workaround; using isTestUser()

Include more info in logging (e.g., line  number, so I don't need to include method name each time)
From C:\Program Files\Google\google_appengine\google\appengine\tools\appcfg.py
      .basicConfig(format=('%(asctime)s %(levelname)s %(filename)s:'
                                    '%(lineno)s %(message)s '))


                              
Remove unused modules/classes/methods
- Try;
    pychecker in \Downloads
    pylint
    pyflakes
- Leave them in if they were used by GTP? In case someone else want to add extra features?
-- Probaly not worth it, due to very different structure of GTE vs GTP
From http://stackoverflow.com/questions/2540202/how-can-i-check-for-unused-import-in-many-python-files
    If you use the eclipse IDE with pydev and mylyn, it provides automatic checking and highlighting for unused imports, among other things. It integrates with pylint as well.



- Consider creating a template to produce a text file
-- Investigate if Django can use spaces to indent tasks
-- Need to handle text wrap/overflow




Improve look of /completed page.

Tidy up completed.html


Remove debug=True from application = webapp.WSGIApplication()
- debug=true causee exception message to be displayed in browser


Can't use email when in production due to limit of 100 emails/day
! 28 Jan 2012; Received "OverQuotaError: The API call mail.Send() required more quota than is available."
  even though I'd only sent 9 emails! (only 9%)

  
Try catching exceptions and displaying more meaningful error messages on HTML page



Create a Google code and Google Groups account for js-tasks
- Upload source code
- Announce to GTP groups (see URLs in "GTP Alternative" folder on desktop


